<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on RUHM BLOG SITE</title>
    <link>https://blog.ruhm.me/tags/git/index.xml</link>
    <description>Recent content in Git on RUHM BLOG SITE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://blog.ruhm.me/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>git 通过代理加速</title>
      <link>https://blog.ruhm.me/post/git-acceleration/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.ruhm.me/post/git-acceleration/</guid>
      <description>

&lt;h1 id=&#34;git-通过代理加速&#34;&gt;git 通过代理加速&lt;/h1&gt;

&lt;p&gt;github 访问受限，导致 clone / push 等操作速度很慢。以下是两个加速的方法以及缺陷和对比&lt;/p&gt;

&lt;h2 id=&#34;https&#34;&gt;https&lt;/h2&gt;

&lt;p&gt;github 允许用户通过 &lt;code&gt;https&lt;/code&gt; 端口使用 &lt;code&gt;ssh&lt;/code&gt;，可以通过下面的指令测试&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -T -p 443 git@ssh.github.com
Hi username! You&#39;ve successfully authenticated, but GitHub does not
provide shell access.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果测试不通过，就需要修改配置文件 &lt;code&gt;~/.ssh/config&lt;/code&gt;，增加&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host github.com
  Hostname ssh.github.com
  Port 443
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;优点&#34;&gt;优点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http&lt;/code&gt; 和 &lt;code&gt;https&lt;/code&gt; 代理是非常常见的，比如我一般都是对系统全局代理&lt;/li&gt;
&lt;li&gt;配置比较简单&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;缺点&#34;&gt;缺点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;因为走的是 &lt;code&gt;https&lt;/code&gt; 协议，那么在github认证时只能使用提供 username/password 的方式认证，如果要避免每次push时都输入密码，需要一些额外的步骤。&lt;a href=&#34;https://help.github.com/articles/caching-your-github-password-in-git/&#34;&gt;Caching your GitHub password in Git - User Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;另外如果开启了 &lt;code&gt;two-factor authentication&lt;/code&gt;，还需要提供 &lt;code&gt;personal access token&lt;/code&gt;。&lt;a href=&#34;https://help.github.com/articles/https-cloning-errors/#provide-access-token-if-2fa-enabled&#34;&gt;Provide access token if 2FA enabled - User Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更多详情参考 &lt;a href=&#34;https://help.github.com/articles/using-ssh-over-the-https-port/&#34;&gt;Using SSH over the HTTPS port - User Documentation&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;ssh&#34;&gt;ssh&lt;/h2&gt;

&lt;p&gt;前提：需要一个 socks5 代理&lt;/p&gt;

&lt;p&gt;如果是直接通过 &lt;code&gt;ssh&lt;/code&gt; 协议访问，则需要按照以下步骤配置&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;/usr/local/bin&lt;/code&gt; 增加一个文件，名为 &lt;code&gt;git-proxy-wrapper&lt;/code&gt;，增加 +x 权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruhm@mac:~$ cat /usr/local/bin/git-proxy-wrapper
#! /bin/bash
nc -xlocalhost:1080 -X5 $*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意，上面需要本机在 &lt;code&gt;1080&lt;/code&gt; 端口打开 &lt;code&gt;socks5&lt;/code&gt; 代理，端口可以自定义&lt;/p&gt;

&lt;p&gt;&lt;code&gt;~/.ssh/config&lt;/code&gt; 配置文件中内容如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host github.com
    hostname github.com
    User xxxxx
    IdentityFile ~/.ssh/xxxxxx
    ProxyCommand /usr/local/sbin/git-proxy-wrapper &#39;%h %p&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;优点-1&#34;&gt;优点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ssh 认证不需要提供用户名和密码&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;缺点-1&#34;&gt;缺点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;需要一个 &lt;code&gt;socks5&lt;/code&gt; 代理&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/23315073&#34;&gt;有何方法可以给github远程仓库的push提速？ - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/goncha/4591538&#34;&gt;Git and socks5 proxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>git 多账号处理</title>
      <link>https://blog.ruhm.me/post/multi-user-in-git/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.ruhm.me/post/multi-user-in-git/</guid>
      <description>

&lt;h2 id=&#34;git-多账号处理&#34;&gt;git 多账号处理&lt;/h2&gt;

&lt;p&gt;主要分两种场景&lt;/p&gt;

&lt;h2 id=&#34;1-不同网站的2个git账号使用相同的邮箱&#34;&gt;1. 不同网站的2个git账号使用相同的邮箱&lt;/h2&gt;

&lt;p&gt;对于不同网站，可以使用同一个邮箱，比如，github，coding的账号可以都是 xxxx#gmail.com，这个时候由于唯一性的认证是邮箱，所以 ssh config 的配置如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;host github
  hostname github.com
host coding
  hostname coding.net
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;假设都是默认使用的 id_rsa ，不需要指定key的位置。&lt;/p&gt;

&lt;h2 id=&#34;2-同一个网站有2个账号&#34;&gt;2. 同一个网站有2个账号&lt;/h2&gt;

&lt;p&gt;比如有两个github账号&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;host github.com-userA
    hostname github.com
    User userA
    IdentityFile ~/.ssh/github_userA_rsa

host github.com-userB
    hostname github.com
    User userB
    IdentityFile ~/.ssh/github_userB_rsa
    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这种情况在 push/pull 的时候要注意取消 global 的账户配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.取消global的配置
git config --global --unset user.name
git config --global --unset user.email

2.设置每个项目repo的git的user.email, 比如
git config  user.email &amp;quot;userA@xx.com&amp;quot;
git config  user.name &amp;quot;userA&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;如何验证&#34;&gt;如何验证&lt;/h2&gt;

&lt;p&gt;通过指令 &lt;code&gt;ssh -T&lt;/code&gt;, 需要详细信息则 &lt;code&gt;ssh -vT&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# ssh -T git@github.com
ssh -T Hi alastairruhm! You&#39;ve successfully authenticated, but GitHub does not provide shell access.
# ssh -T git@git.coding.net
Hello ruhm! You&#39;ve connected to Coding.net via SSH successfully!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;q-a&#34;&gt;Q&amp;amp;A&lt;/h2&gt;

&lt;h3 id=&#34;如果发现-push-提交的-user-name-是错误的-如何修复&#34;&gt;如果发现 push 提交的 user.name 是错误的，如何修复？&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;参考：[Changing author info - User Documentation](https://help.github.com/articles/changing-author-info/)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;过多的秘钥导致服务器触发最大认证次数而登录失败的问题&#34;&gt;过多的秘钥导致服务器触发最大认证次数而登录失败的问题&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;```
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password
debug1: Next authentication method: publickey
debug1: Offering RSA public key: /Users/leon/.ssh/id_rsa
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password
debug1: Offering RSA public key: /Users/leon/.ssh/gitcafe_ras
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password
debug1: Offering RSA public key: /Users/leon/.ssh/github_rsa
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password
debug1: Offering RSA public key: /Users/leon/.ssh/zijin-root-server
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password
debug1: Offering RSA public key: /Users/leon/.ssh/gitlab_rsa
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password
debug1: Offering RSA public key: /Users/leon/.ssh/github_alastairruhm_rsa
Received disconnect from 10.34.50.193: 2: Too many authentication failures for root
Disconnected from 10.34.50.193
```

这个时候，先查看系统 ssh-key 代理

```
ssh-add -l
2048 SHA256:xxxx /Users/leon/.ssh/id_rsa (RSA)
2048 SHA256:xxxx /Users/leon/.ssh/gitcafe_ras (RSA)
4096 SHA256:xxxx /Users/leon/.ssh/github_rsa (RSA)
2048 SHA256:xxxx /Users/leon/.ssh/zj-root-server (RSA)
4096 SHA256:xxxx /Users/leon/.ssh/gitlab_rsa (RSA)
2048 SHA256:xxxx /Users/leon/.ssh/github_alastairruhm_rsa (RSA)
2048 SHA256:xxxx /Users/leon/.ssh/google_compute_engine (RSA)
```

删除全部代理

```
ssh-add -D
```

如果是OSX，再通过将私钥加入agent管理

```
ssh-add -K /Users/leon/.ssh/google_compute_engine
...
```
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;如何避免本地git提交使用错误的账号&#34;&gt;如何避免本地git提交使用错误的账号&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Require setting user.name and email per-repo:
$ git config --global user.useConfigOnly true

# Remove email address from global config:
$ git config --global --unset-all user.email
$ git config --global --unset-all user.name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样之后的 commit，如果没有设置 name和email，就会出现如下错误&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git commit -m &amp;quot;test&amp;quot;

*** Please tell me who you are.

Run

  git config --global user.email &amp;quot;you@example.com&amp;quot;
  git config --global user.name &amp;quot;Your Name&amp;quot;

to set your account&#39;s default identity.
Omit --global to set the identity only in this repository.

fatal: no name was given and auto-detection is disabled
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考链接&#34;&gt;参考链接：&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/suziewong/4378434&#34;&gt;Git的多账号如何处理？ 1.同一台电脑多个git（不同网站的）账号 2.同一台电脑多个git（同一个网站的比如github的）多个账号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tmyam.github.io/blog/2014/05/07/duo-githubzhang-hu-she-zhi/&#34;&gt;一个客户端设置多个github账号 - tmyam&amp;rsquo;s blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/setting-your-username-in-git/&#34;&gt;Setting your username in Git - User Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xirong/my-git/blob/master/use-gitlab-github-together.md&#34;&gt;my-git/use-gitlab-github-together.md at master · xirong/my-git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://orrsella.com/2013/08/10/git-using-different-user-emails-for-different-repositories/&#34;&gt;Git: Using Different User Emails for Different Repositories – Orr Sella&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>