<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Into the Unknown</title>
    <link>https://blog.ruhm.me/tags/python/</link>
    <description>Recent content in Python on Into the Unknown</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 12 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.ruhm.me/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>python 字符串格式化</title>
      <link>https://blog.ruhm.me/post/20180612-python-string-formation/</link>
      <pubDate>Tue, 12 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.ruhm.me/post/20180612-python-string-formation/</guid>
      <description>最近通过 PEP498 学习到 f-strings 的用法。文档见这里：https://docs.python.org/3.6/reference/lexical_analy</description>
    </item>
    
    <item>
      <title>python 正则表达式和内置 re 模块小结</title>
      <link>https://blog.ruhm.me/post/python-regex-notes/</link>
      <pubDate>Sun, 20 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.ruhm.me/post/python-regex-notes/</guid>
      <description>[toc] python 正则表达式和内置 re 模块小结 什么是正则表达式 正则表达式（regular expression）是可以匹配文本片段的模式 表达式全集 正则表达式有</description>
    </item>
    
    <item>
      <title>pyenv 通过国内镜像安装 python</title>
      <link>https://blog.ruhm.me/post/pyenv-install-python-with-mirror/</link>
      <pubDate>Sun, 18 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.ruhm.me/post/pyenv-install-python-with-mirror/</guid>
      <description>pyenv 通过国内镜像安装 python sudo curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash export v=3.5.1 wget http://mirrors.sohu.com/python/$v/Python-$v.tar.xz -P ~/.pyenv/cache/;pyenv install $v TIPS: 这里使用的是搜狐的镜像源：http://mirrors.sohu.com/python/ 下</description>
    </item>
    
    <item>
      <title>使用缓存服务器加速 python pip 方式 安装包</title>
      <link>https://blog.ruhm.me/post/pip-cache/</link>
      <pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.ruhm.me/post/pip-cache/</guid>
      <description>使用缓存服务器加速 python pip 方式 安装包 pip 的问题 从 pypi.python.org 官方源安装速度太慢，切换到国内的镜像，开发是没有什么问题，但是如果要搞持续集成，就需要在内网构建</description>
    </item>
    
  </channel>
</rss>